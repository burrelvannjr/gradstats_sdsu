group <- NULL
bygroups <- length(match.call())-3
n1 <- deparse(substitute(var1))
n1 <- as.character(n1)
if(bygroups==-1) {
title <- paste0("Histogram of '", deparse(substitute(df)), "'")
labx <- deparse(substitute(df))
df <- as.data.frame(df)
df <- df %>%
mutate(group = "group")
names(df) <- c("v1","group")
n0 <- "v1"
n0 <- as.character(n0)
#dens = split(df, df$group) %>%
#  map_df(~ tibble(v1=seq(min(.x[[n0]],na.rm=T), max(.x[[n0]],na.rm=T), length=1000),
#                  density1=dnorm(x=v1, mean=mean(.x[[n0]],na.rm=T), sd=sd(.x[[n0]],na.rm=T))),
#         .id="group")
#dens = split(df, df$group) %>%
#  map_df(~ tibble(var1=seq(min(.x[[n1]],na.rm=T), max(.x[[n1]],na.rm=T), length=1000),
#                  density1=dnorm(x=var1, mean=mean(.x[[n1]],na.rm=T), sd=sd(.x[[n1]],na.rm=T))),
#         .id="group")
#dens = split(df, df$group) %>%
#  map_df(~ tibble(v1=seq(((mean(.x[[n0]], na.rm=T))-(2.58*(((sd(.x[[n0]], na.rm=T)) )))), ((mean(.x[[n0]], na.rm=T))+(2.58*(((sd(.x[[n0]], na.rm=T)) )))), length=1000),
#                  density1=dnorm(x=v1, mean=mean(.x[[n0]],na.rm=T), sd=sd(.x[[n0]],na.rm=T))),
#         .id="group")
dens = split(df, df$group) %>%
map_df(~ tibble(v1=seq(((mean(.x[[n0]], na.rm=T))-(3.291*(ifelse(length(.x)>1, sd(.x[[n0]], na.rm=T), 0)))), ((mean(.x[[n0]], na.rm=T))+(3.291*(ifelse(length(.x)>1, sd(.x[[n0]], na.rm=T), 0)))), length=1000),
density1=dnorm(x=v1, mean=mean(.x[[n0]],na.rm=T), sd=(ifelse(length(.x)>1, sd(.x[[n0]], na.rm=T), 0)))),
.id="group")
b1 <- df
b1 <- b1[,1]
#bins <- ((2 * (IQR(b1, na.rm=T))) / (length(b1)^(1/(length(b1)))))
bins <- diff(range(b1, na.rm=T)) / (2 * IQR(b1, na.rm=T) / length(b1)^(1/3))
if((2 * IQR(b1, na.rm=T)==0)){
bw <- 1
}
else
bw <- ((2 * IQR(b1, na.rm=T)) / length(b1)^(1/3))
print(bw)
df2 <- df %>% dplyr::count(group)
df2$group <- as.character(df2$group)
dens <- dens %>% left_join(df2, by="group")
dens <- dens %>% mutate(density=(density1*bw*n)) #newheight is yheight * bw * length(df)
p <- ggplot2::ggplot(data = df, aes(x=v1)) +
geom_histogram(color="black", fill="lightgrey", binwidth = bw) +
facet_null() +
geom_line(data=dens, aes(x=v1, y=(density)), colour="black") +
ggtitle(title) + xlab(labx) + #xlim(c(min(b1),max(b1))) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(vjust=0.5, colour="#000000"),
axis.text.y = element_text(face="bold", colour="#000000"), plot.title = element_text(hjust = 0.5, lineheight=1.5, face="bold"))
}
if(bygroups==0) {
title <- paste0("Histogram of '", deparse(substitute(var1)), "'")
df <- df %>%
mutate(group = "group")
dens = split(df, df$group) %>%
map_df(~ tibble(var1=seq(((mean(.x[[n1]], na.rm=T))-(3.291*(ifelse(length(.x)>1, sd(.x[[n1]], na.rm=T), 0)))), ((mean(.x[[n1]], na.rm=T))+(3.291*(ifelse(length(.x)>1, sd(.x[[n1]], na.rm=T), 0)))), length=1000),
density1=dnorm(x=var1, mean=mean(.x[[n1]],na.rm=T), sd=(ifelse(length(.x)>1, sd(.x[[n1]], na.rm=T), 0)))),
.id="group")
#dens = split(df, df$group) %>%
#  map_df(~ tibble(var1=seq(((mean(.x[[n1]], na.rm=T))-(2.58*(((sd(.x[[n1]], na.rm=T)) )))), ((mean(.x[[n1]], na.rm=T))+(2.58*(((sd(.x[[n1]], na.rm=T)) )))), length=1000),
#                  density1=dnorm(x=var1, mean=mean(.x[[n1]],na.rm=T), sd=sd(.x[[n1]],na.rm=T))),
#         .id="group")
b1 <- df %>% dplyr::select({{ var1 }})
b1 <- b1[,1]
#bins <- ((2 * (IQR(b1, na.rm=T))) / (length(b1)^(1/(length(b1)))))
bins <- diff(range(b1, na.rm=T)) / (2 * IQR(b1, na.rm=T) / length(b1)^(1/3))
if((2 * IQR(b1, na.rm=T)==0)){
bw <- 1
}
else
bw <- ((2 * IQR(b1, na.rm=T)) / length(b1)^(1/3))
print(bw)
#dens <- dens %>% mutate(density=(density1*bw*nrow(df))) #newheight is yheight * bw * length(df)
df2 <- df %>% dplyr::count(group)
df2$group <- as.character(df2$group)
dens <- dens %>% left_join(df2, by="group")
dens <- dens %>% mutate(density=(density1*bw*n)) #newheight is yheight * bw * length(df)
p <- ggplot2::ggplot(data = df, aes(x={{ var1 }})) +
geom_histogram(color="black", fill="lightgrey", binwidth = bw) +
facet_null() +
geom_line(data=dens, aes(x=var1, y=(density)), colour="black") +
ggtitle(title) + #xlim(c(min(b1),max(b1))) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(vjust=0.5, colour="#000000"),
axis.text.y = element_text(face="bold", colour="#000000"), plot.title = element_text(hjust = 0.5, lineheight=1.5, face="bold"))
}
if(bygroups==1) {
df <- df %>%
dplyr::mutate(group = {{ by1 }})
title <- paste0("Histogram of '", deparse(substitute(var1)),"' by '", deparse(substitute(by1)), "'")
#print(bygroups)
#dens = split(df, df$group) %>%
#  map_df(~ tibble(var1=seq(((mean(.x[[n1]], na.rm=T))-(2.58*(((sd(.x[[n1]], na.rm=T)))))), ((mean(.x[[n1]], na.rm=T))+(2.58*(((sd(.x[[n1]], na.rm=T)))))), length=1000),
#                  density1=dnorm(x=var1, mean=mean(.x[[n1]],na.rm=T), sd=sd(.x[[n1]],na.rm=T))),
#         .id="group")
dens = split(df, df$group) %>%
map_df(~ tibble(var1=seq(((mean(.x[[n1]], na.rm=T))-(3.291*(ifelse(length(.x)>1, sd(.x[[n1]], na.rm=T), 0)))), ((mean(.x[[n1]], na.rm=T))+(3.291*(ifelse(length(.x)>1, sd(.x[[n1]], na.rm=T), 0)))), length=1000),
density1=dnorm(x=var1, mean=mean(.x[[n1]],na.rm=T), sd=(ifelse(length(.x)>1, sd(.x[[n1]], na.rm=T), 0)))),
.id="group")
b1 <- df %>% dplyr::select({{ var1 }})
b1 <- b1[,1]
#bins <- ((2 * (IQR(b1, na.rm=T))) / (length(b1)^(1/(length(b1)))))
bins <- diff(range(b1, na.rm=T)) / (2 * IQR(b1, na.rm=T) / length(b1)^(1/3))
bw <- (2 * IQR(b1, na.rm=T) / length(b1)^(1/3))
if((2 * IQR(b1, na.rm=T)==0)){
bw <- 1
}
df2 <- df %>% dplyr::count(group)
df2$group <- as.character(df2$group)
#print(sapply(df2, class))
#print(sapply(dens, class))
dens <- dens %>% left_join(df2, by="group")
dens <- dens %>% mutate(density=(density1*bw*n)) #newheight is yheight * bw * length(df)
p <- ggplot2::ggplot(data = df, aes(x={{ var1 }})) +
geom_histogram(color="black", fill="lightgrey", binwidth = bw) +
facet_wrap(~group) +
geom_line(data=dens, aes(x=var1, y=(density)), colour="black") +
ggtitle(title) + #xlim(c(min(b1),max(b1))) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(vjust=0.5, colour="#000000"),
axis.text.y = element_text(face="bold", colour="#000000"), plot.title = element_text(hjust = 0.5, lineheight=1.5, face="bold"))
}
if(bygroups==2) {
df <- df %>%
mutate(group = paste0({{ by1 }},", ",{{ by2}}))
title <- paste0("Histogram of '", deparse(substitute(var1)),"' by '", deparse(substitute(by1)),"' and '", deparse(substitute(by2)), "'")
#print(bygroups)
dens = split(df, df$group) %>%
map_df(~ tibble(var1=seq(((mean(.x[[n1]], na.rm=T))-(3.291*(ifelse(length(.x)>1, sd(.x[[n1]], na.rm=T), 0)))), ((mean(.x[[n1]], na.rm=T))+(3.291*(ifelse(length(.x)>1, sd(.x[[n1]], na.rm=T), 0)))), length=1000),
density1=dnorm(x=var1, mean=mean(.x[[n1]],na.rm=T), sd=(ifelse(length(.x)>1, sd(.x[[n1]], na.rm=T), 0)))),
.id="group")
#dens = split(df, df$group) %>%
#  map_df(~ tibble(var1=seq(((mean(.x[[n1]], na.rm=T))-(2.58*(((sd(.x[[n1]], na.rm=T)))))), ((mean(.x[[n1]], na.rm=T))+(2.58*(((sd(.x[[n1]], na.rm=T)))))), length=1000),
#                  density1=dnorm(x=var1, mean=mean(.x[[n1]],na.rm=T), sd=sd(.x[[n1]],na.rm=T))),
#         .id="group")
b1 <- df %>% dplyr::select({{ var1 }})
b1 <- b1[,1]
#bins <- ((2 * (IQR(b1, na.rm=T))) / (length(b1)^(1/(length(b1)))))
bins <- diff(range(b1, na.rm=T)) / (2 * IQR(b1, na.rm=T) / length(b1)^(1/3))
bw <- (2 * IQR(b1, na.rm=T) / length(b1)^(1/3))
if((2 * IQR(b1, na.rm=T)==0)){
bw <- 1
}
#dens <- dens %>% mutate(density=(density1*bw*nrow(df))) #newheight is yheight * bw * length(df)
df2 <- df %>% dplyr::count(group)
df2$group <- as.character(df2$group)
dens <- dens %>% left_join(df2, by="group")
dens <- dens %>% mutate(density=(density1*bw*n)) #newheight is yheight * bw * length(df)
p <- ggplot2::ggplot(data = df, aes(x={{ var1 }})) +
geom_histogram(color="black", fill="lightgrey", binwidth = bw) +
facet_wrap(~group) +
geom_line(data=dens, aes(x=var1, y=(density)), colour="black") +
ggtitle(title) + #xlim(c(min(b1),max(b1))) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(vjust=0.5, colour="#000000"),
axis.text.y = element_text(face="bold", colour="#000000"), plot.title = element_text(hjust = 0.5, lineheight=1.5, face="bold"))
}
#df$group
#print(df)
return(p)
}
hst(short2$robbery)
hst(mtcars, mpg)
hst <- function(df, var1, by1, by2){
v1 <- NULL #necessary for removing the "undefined global function" warning
density1 <- NULL
group <- NULL
bygroups <- length(match.call())-3
n1 <- deparse(substitute(var1))
n1 <- as.character(n1)
if(bygroups==-1) {
title <- paste0("Histogram of '", deparse(substitute(df)), "'")
labx <- deparse(substitute(df))
df <- as.data.frame(df)
df <- df %>%
mutate(group = "group")
names(df) <- c("v1","group")
n0 <- "v1"
n0 <- as.character(n0)
#dens = split(df, df$group) %>%
#  map_df(~ tibble(v1=seq(min(.x[[n0]],na.rm=T), max(.x[[n0]],na.rm=T), length=1000),
#                  density1=dnorm(x=v1, mean=mean(.x[[n0]],na.rm=T), sd=sd(.x[[n0]],na.rm=T))),
#         .id="group")
#dens = split(df, df$group) %>%
#  map_df(~ tibble(var1=seq(min(.x[[n1]],na.rm=T), max(.x[[n1]],na.rm=T), length=1000),
#                  density1=dnorm(x=var1, mean=mean(.x[[n1]],na.rm=T), sd=sd(.x[[n1]],na.rm=T))),
#         .id="group")
#dens = split(df, df$group) %>%
#  map_df(~ tibble(v1=seq(((mean(.x[[n0]], na.rm=T))-(2.58*(((sd(.x[[n0]], na.rm=T)) )))), ((mean(.x[[n0]], na.rm=T))+(2.58*(((sd(.x[[n0]], na.rm=T)) )))), length=1000),
#                  density1=dnorm(x=v1, mean=mean(.x[[n0]],na.rm=T), sd=sd(.x[[n0]],na.rm=T))),
#         .id="group")
dens = split(df, df$group) %>%
map_df(~ tibble(v1=seq(((mean(.x[[n0]], na.rm=T))-(3.291*(ifelse(length(.x)>1, sd(.x[[n0]], na.rm=T), 0)))), ((mean(.x[[n0]], na.rm=T))+(3.291*(ifelse(length(.x)>1, sd(.x[[n0]], na.rm=T), 0)))), length=1000),
density1=dnorm(x=v1, mean=mean(.x[[n0]],na.rm=T), sd=(ifelse(length(.x)>1, sd(.x[[n0]], na.rm=T), 0)))),
.id="group")
b1 <- df
b1 <- b1[,1]
#bins <- ((2 * (IQR(b1, na.rm=T))) / (length(b1)^(1/(length(b1)))))
bins <- diff(range(b1, na.rm=T)) / (2 * IQR(b1, na.rm=T) / length(b1)^(1/3))
if((2 * IQR(b1, na.rm=T)==0)){
bw <- 1
}
else
bw <- ((2 * IQR(b1, na.rm=T)) / length(b1)^(1/3))
print(bw)
print((2 * IQR(b1, na.rm=T)))
print(length(b1)^(1/3))
df2 <- df %>% dplyr::count(group)
df2$group <- as.character(df2$group)
dens <- dens %>% left_join(df2, by="group")
dens <- dens %>% mutate(density=(density1*bw*n)) #newheight is yheight * bw * length(df)
p <- ggplot2::ggplot(data = df, aes(x=v1)) +
geom_histogram(color="black", fill="lightgrey", binwidth = bw) +
facet_null() +
geom_line(data=dens, aes(x=v1, y=(density)), colour="black") +
ggtitle(title) + xlab(labx) + #xlim(c(min(b1),max(b1))) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(vjust=0.5, colour="#000000"),
axis.text.y = element_text(face="bold", colour="#000000"), plot.title = element_text(hjust = 0.5, lineheight=1.5, face="bold"))
}
if(bygroups==0) {
title <- paste0("Histogram of '", deparse(substitute(var1)), "'")
df <- df %>%
mutate(group = "group")
dens = split(df, df$group) %>%
map_df(~ tibble(var1=seq(((mean(.x[[n1]], na.rm=T))-(3.291*(ifelse(length(.x)>1, sd(.x[[n1]], na.rm=T), 0)))), ((mean(.x[[n1]], na.rm=T))+(3.291*(ifelse(length(.x)>1, sd(.x[[n1]], na.rm=T), 0)))), length=1000),
density1=dnorm(x=var1, mean=mean(.x[[n1]],na.rm=T), sd=(ifelse(length(.x)>1, sd(.x[[n1]], na.rm=T), 0)))),
.id="group")
#dens = split(df, df$group) %>%
#  map_df(~ tibble(var1=seq(((mean(.x[[n1]], na.rm=T))-(2.58*(((sd(.x[[n1]], na.rm=T)) )))), ((mean(.x[[n1]], na.rm=T))+(2.58*(((sd(.x[[n1]], na.rm=T)) )))), length=1000),
#                  density1=dnorm(x=var1, mean=mean(.x[[n1]],na.rm=T), sd=sd(.x[[n1]],na.rm=T))),
#         .id="group")
b1 <- df %>% dplyr::select({{ var1 }})
b1 <- b1[,1]
#bins <- ((2 * (IQR(b1, na.rm=T))) / (length(b1)^(1/(length(b1)))))
bins <- diff(range(b1, na.rm=T)) / (2 * IQR(b1, na.rm=T) / length(b1)^(1/3))
if((2 * IQR(b1, na.rm=T)==0)){
bw <- 1
}
else
bw <- ((2 * IQR(b1, na.rm=T)) / length(b1)^(1/3))
print(bw)
#dens <- dens %>% mutate(density=(density1*bw*nrow(df))) #newheight is yheight * bw * length(df)
df2 <- df %>% dplyr::count(group)
df2$group <- as.character(df2$group)
dens <- dens %>% left_join(df2, by="group")
dens <- dens %>% mutate(density=(density1*bw*n)) #newheight is yheight * bw * length(df)
p <- ggplot2::ggplot(data = df, aes(x={{ var1 }})) +
geom_histogram(color="black", fill="lightgrey", binwidth = bw) +
facet_null() +
geom_line(data=dens, aes(x=var1, y=(density)), colour="black") +
ggtitle(title) + #xlim(c(min(b1),max(b1))) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(vjust=0.5, colour="#000000"),
axis.text.y = element_text(face="bold", colour="#000000"), plot.title = element_text(hjust = 0.5, lineheight=1.5, face="bold"))
}
if(bygroups==1) {
df <- df %>%
dplyr::mutate(group = {{ by1 }})
title <- paste0("Histogram of '", deparse(substitute(var1)),"' by '", deparse(substitute(by1)), "'")
#print(bygroups)
#dens = split(df, df$group) %>%
#  map_df(~ tibble(var1=seq(((mean(.x[[n1]], na.rm=T))-(2.58*(((sd(.x[[n1]], na.rm=T)))))), ((mean(.x[[n1]], na.rm=T))+(2.58*(((sd(.x[[n1]], na.rm=T)))))), length=1000),
#                  density1=dnorm(x=var1, mean=mean(.x[[n1]],na.rm=T), sd=sd(.x[[n1]],na.rm=T))),
#         .id="group")
dens = split(df, df$group) %>%
map_df(~ tibble(var1=seq(((mean(.x[[n1]], na.rm=T))-(3.291*(ifelse(length(.x)>1, sd(.x[[n1]], na.rm=T), 0)))), ((mean(.x[[n1]], na.rm=T))+(3.291*(ifelse(length(.x)>1, sd(.x[[n1]], na.rm=T), 0)))), length=1000),
density1=dnorm(x=var1, mean=mean(.x[[n1]],na.rm=T), sd=(ifelse(length(.x)>1, sd(.x[[n1]], na.rm=T), 0)))),
.id="group")
b1 <- df %>% dplyr::select({{ var1 }})
b1 <- b1[,1]
#bins <- ((2 * (IQR(b1, na.rm=T))) / (length(b1)^(1/(length(b1)))))
bins <- diff(range(b1, na.rm=T)) / (2 * IQR(b1, na.rm=T) / length(b1)^(1/3))
bw <- (2 * IQR(b1, na.rm=T) / length(b1)^(1/3))
if((2 * IQR(b1, na.rm=T)==0)){
bw <- 1
}
df2 <- df %>% dplyr::count(group)
df2$group <- as.character(df2$group)
#print(sapply(df2, class))
#print(sapply(dens, class))
dens <- dens %>% left_join(df2, by="group")
dens <- dens %>% mutate(density=(density1*bw*n)) #newheight is yheight * bw * length(df)
p <- ggplot2::ggplot(data = df, aes(x={{ var1 }})) +
geom_histogram(color="black", fill="lightgrey", binwidth = bw) +
facet_wrap(~group) +
geom_line(data=dens, aes(x=var1, y=(density)), colour="black") +
ggtitle(title) + #xlim(c(min(b1),max(b1))) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(vjust=0.5, colour="#000000"),
axis.text.y = element_text(face="bold", colour="#000000"), plot.title = element_text(hjust = 0.5, lineheight=1.5, face="bold"))
}
if(bygroups==2) {
df <- df %>%
mutate(group = paste0({{ by1 }},", ",{{ by2}}))
title <- paste0("Histogram of '", deparse(substitute(var1)),"' by '", deparse(substitute(by1)),"' and '", deparse(substitute(by2)), "'")
#print(bygroups)
dens = split(df, df$group) %>%
map_df(~ tibble(var1=seq(((mean(.x[[n1]], na.rm=T))-(3.291*(ifelse(length(.x)>1, sd(.x[[n1]], na.rm=T), 0)))), ((mean(.x[[n1]], na.rm=T))+(3.291*(ifelse(length(.x)>1, sd(.x[[n1]], na.rm=T), 0)))), length=1000),
density1=dnorm(x=var1, mean=mean(.x[[n1]],na.rm=T), sd=(ifelse(length(.x)>1, sd(.x[[n1]], na.rm=T), 0)))),
.id="group")
#dens = split(df, df$group) %>%
#  map_df(~ tibble(var1=seq(((mean(.x[[n1]], na.rm=T))-(2.58*(((sd(.x[[n1]], na.rm=T)))))), ((mean(.x[[n1]], na.rm=T))+(2.58*(((sd(.x[[n1]], na.rm=T)))))), length=1000),
#                  density1=dnorm(x=var1, mean=mean(.x[[n1]],na.rm=T), sd=sd(.x[[n1]],na.rm=T))),
#         .id="group")
b1 <- df %>% dplyr::select({{ var1 }})
b1 <- b1[,1]
#bins <- ((2 * (IQR(b1, na.rm=T))) / (length(b1)^(1/(length(b1)))))
bins <- diff(range(b1, na.rm=T)) / (2 * IQR(b1, na.rm=T) / length(b1)^(1/3))
bw <- (2 * IQR(b1, na.rm=T) / length(b1)^(1/3))
if((2 * IQR(b1, na.rm=T)==0)){
bw <- 1
}
#dens <- dens %>% mutate(density=(density1*bw*nrow(df))) #newheight is yheight * bw * length(df)
df2 <- df %>% dplyr::count(group)
df2$group <- as.character(df2$group)
dens <- dens %>% left_join(df2, by="group")
dens <- dens %>% mutate(density=(density1*bw*n)) #newheight is yheight * bw * length(df)
p <- ggplot2::ggplot(data = df, aes(x={{ var1 }})) +
geom_histogram(color="black", fill="lightgrey", binwidth = bw) +
facet_wrap(~group) +
geom_line(data=dens, aes(x=var1, y=(density)), colour="black") +
ggtitle(title) + #xlim(c(min(b1),max(b1))) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(vjust=0.5, colour="#000000"),
axis.text.y = element_text(face="bold", colour="#000000"), plot.title = element_text(hjust = 0.5, lineheight=1.5, face="bold"))
}
#df$group
#print(df)
return(p)
}
hst(mtcars, mpg)
hst(short2$robbery)
length(short2$robbery)
length(short2$robbery)^(1/3)
(2 * IQR(short$robbery, na.rm=T))
short2 <- short %>% dplyr::filter(robbery>=2)
1154/68256
short1 <- short %>% dplyr::filter(robbery==1)
short2 <- short %>% dplyr::filter(robbery>=2)
data <- read.csv("/Users/burrelvannjr/Dropbox/Professional/Research/Projects/Seattle Pot Shop Stops/data.csv",header=TRUE,sep=",")
data <- data %>%
#mutate(lnpop_i = log(totalpop_i)) %>%
#mutate(pct_black_i = (totalpop_black_i/totalpop_i)*100) %>%
#mutate(pct_latino_i = (totalpop_latino_i/totalpop_i)*100) %>%
#mutate(pct_vacant_i = (housing_units_vacant_i/housing_units_i)*100) %>%
mutate(lnpop = log(totalpop)) %>%
mutate(pct_black = (totalpop_black/totalpop)*100) %>%
mutate(pct_latino = (totalpop_latino/totalpop)*100) %>%
mutate(pct_vacant = (housing_units_vacant/housing_units)*100) %>%
mutate(lnmurder = log(murder + 1)) %>%
mutate(lnrape = log(rape + 1)) %>%
mutate(lnrobbery = log(robbery + 1)) %>%
mutate(lnagg_assault = log(agg_assault + 1)) %>%
mutate(lnburglary = log(burglary + 1)) %>%
mutate(lnlarceny = log(larceny + 1)) %>%
mutate(lnmvtheft = log(mvtheft + 1)) %>%
mutate(lnarson = log(arson + 1)) %>%
mutate(lnterry_stops = log(terry_stops + 1)) %>%
mutate(lncalls_for_service = log(calls_for_service + 1)) %>%
mutate(lnpotshops = log(potshops + 1)) %>%
mutate(vio_crime = murder+rape+robbery+agg_assault) %>%
mutate(lnvio_crime = log(vio_crime +1)) %>%
mutate(prop_crime = burglary+larceny+mvtheft+arson) %>%
mutate(lnprop_crime = log(prop_crime + 1)) %>%
mutate(d_murder = 0) %>%
mutate(d_rape = 0) %>%
mutate(d_robbery = 0) %>%
mutate(d_agg_assault = 0) %>%
mutate(d_burglary = 0) %>%
mutate(d_larceny = 0) %>%
mutate(d_mvtheft = 0) %>%
mutate(d_arson = 0) %>%
mutate(d_murder=replace(d_murder, murder>=1, 1)) %>%
mutate(d_rape=replace(d_rape, rape>=1, 1)) %>%
mutate(d_robbery=replace(d_robbery, robbery>=1, 1)) %>%
mutate(d_agg_assault=replace(d_agg_assault, agg_assault>=1, 1)) %>%
mutate(d_burglary=replace(d_burglary, burglary>=1, 1)) %>%
mutate(d_larceny=replace(d_larceny, larceny>=1, 1)) %>%
mutate(d_mvtheft=replace(d_mvtheft, mvtheft>=1, 1)) %>%
mutate(d_arson=replace(d_arson, arson>=1, 1))
library(QCA)
library(braQCA)
library(MASS)
library(ggplot2)
library(grid)
library(gridExtra)
library(bootstrap)
library(plm)
library(foreign)
#library(lmerTest)
library(RCurl)
library(stargazer)
library(lme4)
#library(lmerTest)
options(scipen = 999) #disables scientific notation
library(tidyr)
library(dplyr)
library(data.table)   # use data table merge - it's *much* faster
require(rgdal)
require(maptools)
require(rgeos)
require(haven)
library(ggplot2)
library(sf)
library(tigris)
library(censusr)
library(tidycensus)
library(ggmap)
library(reshape2)
library(Hmisc)
library(pglm)
library(psych)
library(vannstats)
summary(logit_robbery <- glmer(robbery~lnterry_stops+lnpotshops+lncalls_for_service+lnpop_i+pct_black_i+pct_latino_i+pct_vacant_i+popdens_i +
(1 | geoid), control = glmerControl(optimizer = "bobyqa"),
nAGQ = 100, family = binomial("logit"), data = data))
View(data)
census <- read.csv("/Users/burrelvannjr/Dropbox/Professional/Research/Projects/Seattle Pot Shop Stops/census_data/cleaned_census_year.csv",header=TRUE,sep=",")
View(census)
census <- read.csv("/Users/burrelvannjr/Dropbox/Professional/Research/Projects/Seattle Pot Shop Stops/census_data/cleaned_census_2.csv",header=TRUE,sep=",")
View(census)
data <- read.csv("/Users/burrelvannjr/Dropbox/Professional/Research/Projects/Seattle Pot Shop Stops/data.csv",header=TRUE,sep=",")
data <- data %>%
mutate(lnpop_i = log(totalpop_i)) %>%
mutate(pct_black_i = (totalpop_black_i/totalpop_i)*100) %>%
mutate(pct_latino_i = (totalpop_latino_i/totalpop_i)*100) %>%
mutate(pct_vacant_i = (housing_units_vacant_i/housing_units_i)*100) %>%
#mutate(lnpop = log(totalpop)) %>%
#mutate(pct_black = (totalpop_black/totalpop)*100) %>%
#mutate(pct_latino = (totalpop_latino/totalpop)*100) %>%
#mutate(pct_vacant = (housing_units_vacant/housing_units)*100) %>%
mutate(lnmurder = log(murder + 1)) %>%
mutate(lnrape = log(rape + 1)) %>%
mutate(lnrobbery = log(robbery + 1)) %>%
mutate(lnagg_assault = log(agg_assault + 1)) %>%
mutate(lnburglary = log(burglary + 1)) %>%
mutate(lnlarceny = log(larceny + 1)) %>%
mutate(lnmvtheft = log(mvtheft + 1)) %>%
mutate(lnarson = log(arson + 1)) %>%
mutate(lnterry_stops = log(terry_stops + 1)) %>%
mutate(lncalls_for_service = log(calls_for_service + 1)) %>%
mutate(lnpotshops = log(potshops + 1)) %>%
mutate(vio_crime = murder+rape+robbery+agg_assault) %>%
mutate(lnvio_crime = log(vio_crime +1)) %>%
mutate(prop_crime = burglary+larceny+mvtheft+arson) %>%
mutate(lnprop_crime = log(prop_crime + 1)) %>%
mutate(d_murder = 0) %>%
mutate(d_rape = 0) %>%
mutate(d_robbery = 0) %>%
mutate(d_agg_assault = 0) %>%
mutate(d_burglary = 0) %>%
mutate(d_larceny = 0) %>%
mutate(d_mvtheft = 0) %>%
mutate(d_arson = 0) %>%
mutate(d_murder=replace(d_murder, murder>=1, 1)) %>%
mutate(d_rape=replace(d_rape, rape>=1, 1)) %>%
mutate(d_robbery=replace(d_robbery, robbery>=1, 1)) %>%
mutate(d_agg_assault=replace(d_agg_assault, agg_assault>=1, 1)) %>%
mutate(d_burglary=replace(d_burglary, burglary>=1, 1)) %>%
mutate(d_larceny=replace(d_larceny, larceny>=1, 1)) %>%
mutate(d_mvtheft=replace(d_mvtheft, mvtheft>=1, 1)) %>%
mutate(d_arson=replace(d_arson, arson>=1, 1))
summary(logit_robbery <- glmer(robbery~lnterry_stops+lnpotshops+lncalls_for_service+lnpop_i+pct_black_i+pct_latino_i+pct_vacant_i+popdens_i +
(1 | geoid), control = glmerControl(optimizer = "bobyqa"),
nAGQ = 100, family = binomial("logit"), data = data))
summary(logit_robbery <- glmer(d_robbery~lnterry_stops+lnpotshops+lncalls_for_service+lnpop_i+pct_black_i+pct_latino_i+pct_vacant_i+popdens_i +
(1 | geoid), #control = glmerControl(optimizer = "bobyqa"),
#nAGQ = 100,
family = binomial("logit"), data = data))
data <- mtcars
mean(data$mpg) - 1.96(sd(data$mpg)/sqrt(32))
mean(data$mpg) + 1.96(sd(data$mpg)/sqrt(32))
#ci 95 for mpg
mean(data$mpg) - 1.96*(sd(data$mpg)/sqrt(32))
mean(data$mpg) + 1.96*(sd(data$mpg)/sqrt(32))
mean(data$mpg) - 2.58*(sd(data$mpg)/sqrt(32))
mean(data$mpg) + 2.58*(sd(data$mpg)/sqrt(32))
mean(data$mpg) - 2.58*(sd(data$mpg)/sqrt(length(data)))
length(data)
nrow(data)
m <- mean(data$mpg)
se <- (sd(data$mpg)/sqrt(nrow(data)))
z <- 1.96
ci_95_up <- m + z(se)
ci_95_lo <- m - z(se)
ci_95_up <- m + z*(se)
ci_95_lo <- m - z*(se)
z99 <- 2.58
ci_99_up <- m + z99*(se)
ci_99_lo <- m - z99*(se)
x <- 34.00
mean_mpg <- mean(data$mpg)
sd_mpg <- sd(data$mpg)
((x - mean_mpg)/(sd_mpg))
Z <- ((x - mean_mpg)/(sd_mpg))
Z
x <- 12
mean_mpg <- mean(data$mpg)
sd_mpg <- sd(data$mpg)
Z <- ((x - mean_mpg)/(sd_mpg))
Z
